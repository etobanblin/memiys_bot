const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');
const { createCanvas, loadImage, registerFont } = require('canvas');
const axios = require('axios'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º axios –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (—É–∫–∞–∑–∞–Ω –Ω–∞–ø—Ä—è–º—É—é)
const BOT_TOKEN = '8011558643:AAFc3P3Brnhb1bSWcp7IwyVD45_EFO7XVmM';

// –ü–∞–ø–∫–∞ —Å –º–µ–º–∞–º–∏
const MEME_FOLDER = 'memes'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∞ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–º—ã

// –ü–∞–ø–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const TEMP_FOLDER = 'temp'; // –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
if (!fs.existsSync(TEMP_FOLDER)) {
    fs.mkdirSync(TEMP_FOLDER);
}

// –®—Ä–∏—Ñ—Ç –¥–ª—è –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞
const DEMOTIVATOR_FONT = 'Arial'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userState = {};

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
const menuKeyboard = {
    reply_markup: {
        keyboard: [
            [{ text: 'üì∏ –ú–µ–º –¥–Ω—è' }, { text: 'üîÆ –ì–∞–¥–∞–Ω–∏–µ –ø–æ –º–µ–º—É' }],
            [{ text: 'üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π –≤–∞–π–±' }, { text: 'üñºÔ∏è –°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä' }],
        ],
        resize_keyboard: true,
    },
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–µ–º–∞
function getRandomMeme() {
    try {
        const memes = fs.readdirSync(MEME_FOLDER);
        return memes.length > 0 ? path.join(MEME_FOLDER, memes[Math.floor(Math.random() * memes.length)]) : null;
    } catch (e) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ–º–∞: ${e}`);
        return null;
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–º–∞ –¥–ª—è –≥–∞–¥–∞–Ω–∏—è
function getFortuneMeme() {
    const predictions = [
        '–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å!', '–û—Å—Ç–µ—Ä–µ–≥–∞–π—Å—è —Å—Ç—Ä–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ–≤ üê±', '–¢–≤–æ–π —É—Å–ø–µ—Ö –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–µ–º–æ–≤!',
        '–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –≤–µ—Å–µ–ª—å–µ!', '–ò–∑–±–µ–≥–∞–π —Å–∫—É—á–Ω—ã—Ö –ª—é–¥–µ–π.',
    ];
    const memePath = getRandomMeme();
    return memePath ? { memePath, prediction: predictions[Math.floor(Math.random() * predictions.length)] } : null;
}

async function createDemotivator(imagePath, text = '–î–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä', subtext = '–ü–æ–¥–ø–∏—Å—å') {
    try {
        const img = await loadImage(imagePath);
        const canvas = createCanvas(550, 650);
        const ctx = canvas.getContext('2d');

        // –ß–µ—Ä–Ω—ã–π —Ñ–æ–Ω
        ctx.fillStyle = 'black';
        ctx.fillRect(0, 0, 550, 650);

        // –ë–µ–ª–∞—è —Ä–∞–º–∫–∞ –≤–æ–∫—Ä—É–≥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        ctx.strokeStyle = 'white';
        ctx.lineWidth = 2;
        ctx.strokeRect(25, 25, 500, 500);

        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        ctx.drawImage(img, 30, 30, 490, 490);

        // –¢–µ–∫—Å—Ç (–±–µ–ª—ã–π –∏ –∂–∏—Ä–Ω—ã–π)
        ctx.font = 'bold 40px Arial'; // –ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        ctx.fillStyle = 'white'; // –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
        ctx.textAlign = 'center';
        ctx.fillText(text, 275, 550); // –ü–æ–∑–∏—Ü–∏—è —Ç–µ–∫—Å—Ç–∞

        // –ü–æ–¥–ø–∏—Å—å (–±–µ–ª—ã–π –∏ –∂–∏—Ä–Ω—ã–π)
        ctx.font = 'bold 20px Arial'; // –ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        ctx.fillStyle = 'white'; // –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
        ctx.fillText(subtext, 275, 590); // –ü–æ–∑–∏—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        const outputPath = path.join(TEMP_FOLDER, 'demotivator.jpg');
        const out = fs.createWriteStream(outputPath);
        const stream = canvas.createJPEGStream();
        stream.pipe(out);

        return new Promise((resolve) => {
            out.on('finish', () => resolve(outputPath));
        });
    } catch (e) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞: ${e}`);
        return null;
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Ñ—É–Ω–∫—Ü–∏—é:', menuKeyboard);
});

// "–ú–µ–º –¥–Ω—è"
bot.onText(/üì∏ –ú–µ–º –¥–Ω—è/, async (msg) => {
    const chatId = msg.chat.id;
    const memePath = getRandomMeme();
    if (memePath) {
        try {
            await bot.sendPhoto(chatId, memePath, { caption: 'üì∏ –í–æ—Ç —Ç–≤–æ–π –º–µ–º –¥–Ω—è!' });
        } catch (e) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞: ${e}`);
            bot.sendMessage(chatId, 'üò¢ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞.');
        }
    } else {
        bot.sendMessage(chatId, 'üò¢ –ú–µ–º–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç!');
    }
});

// "–ì–∞–¥–∞–Ω–∏–µ –ø–æ –º–µ–º—É"
bot.onText(/üîÆ –ì–∞–¥–∞–Ω–∏–µ –ø–æ –º–µ–º—É/, async (msg) => {
    const chatId = msg.chat.id;
    const fortune = getFortuneMeme();
    if (fortune) {
        try {
            await bot.sendPhoto(chatId, fortune.memePath, { caption: `üîÆ ${fortune.prediction}` });
        } catch (e) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞ –¥–ª—è –≥–∞–¥–∞–Ω–∏—è: ${e}`);
            bot.sendMessage(chatId, 'üò¢ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞.');
        }
    } else {
        bot.sendMessage(chatId, 'üò¢ –ú–µ–º–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç!');
    }
});

// "–†–∞–Ω–¥–æ–º–Ω—ã–π –≤–∞–π–±"
bot.onText(/üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π –≤–∞–π–±/, async (msg) => {
    const chatId = msg.chat.id;
    const memePath = getRandomMeme();
    if (memePath) {
        try {
            await bot.sendPhoto(chatId, memePath, { caption: 'üé≤ –í–∞–π–± –¥–Ω—è! –ö–∞–∫ —Ç–µ–±–µ?' });
        } catch (e) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞: ${e}`);
            bot.sendMessage(chatId, 'üò¢ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞.');
        }
    } else {
        bot.sendMessage(chatId, 'üò¢ –ú–µ–º–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç!');
    }
});

// "–°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä"
bot.onText(/üñºÔ∏è –°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä.');
    userState[chatId] = { step: 'waiting_for_image' };
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
bot.on('photo', async (msg) => {
    const chatId = msg.chat.id;

    if (userState[chatId] && userState[chatId].step === 'waiting_for_image') {
        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const fileId = msg.photo[msg.photo.length - 1].file_id;
        const filePath = await bot.getFile(fileId);
        const fileUrl = `https://api.telegram.org/file/bot${BOT_TOKEN}/${filePath.file_path}`;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        const imagePath = path.join(TEMP_FOLDER, `${fileId}.jpg`);
        const response = await axios.get(fileUrl, { responseType: 'arraybuffer' });
        fs.writeFileSync(imagePath, response.data);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userState[chatId].imagePath = imagePath;
        userState[chatId].step = 'waiting_for_text';

        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞
        bot.sendMessage(chatId, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞.');
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (userState[chatId] && userState[chatId].step === 'waiting_for_text') {
        const text = msg.text;

        // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä
        const demotivatorPath = await createDemotivator(userState[chatId].imagePath, text, '–ü–æ–¥–ø–∏—Å—å');
        if (demotivatorPath) {
            try {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await bot.sendPhoto(chatId, demotivatorPath, { caption: 'üñºÔ∏è –í–∞—à –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤!' });
            } catch (e) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞: ${e}`);
                bot.sendMessage(chatId, 'üò¢ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä–∞.');
            }
        } else {
            bot.sendMessage(chatId, 'üò¢ –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–µ–º–æ—Ç–∏–≤–∞—Ç–æ—Ä.');
        }

        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        delete userState[chatId];
    }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...');